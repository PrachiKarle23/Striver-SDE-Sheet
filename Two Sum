Brute force

class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
      vector<int>ans;
      int n=nums.size();
      if(n<=1){
        return ans;
      }

    for(int i=0;i<n;i++)
    {
        for(int j=i+1;j<n;j++)
        {
            int sum=nums[i]+nums[j];
            if(sum==target)
            {
                ans.push_back(i);
                ans.push_back(j);
                return ans;
            }
        }
    }
    return ans;
    }
};


unordered_map Solution

class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
      vector<int>ans;
      unordered_map<int,int>mp;

      for(int i=0;i<nums.size();i++)
      {
        mp[nums[i]]=i;
      }
      for(int i=0;i<nums.size();i++)
      {
         int c=target-nums[i];
         if(mp[c] && i!=mp[c])
         {
              ans.push_back(i);
              ans.push_back(mp[c]);
              return ans;
         }
      }
      return ans;  
    }
};
